/**********************************************************************************************************************

 *  FILE DESCRIPTION
 *  -------------------------------------------------------------------------------------------------------------------
 *         File:  Std_Types.h
 *       Module:  -
 *
 *  Description:  <Write File DESCRIPTION here>     
 *  
 *********************************************************************************************************************/
#ifndef __STD_TYPES_H__
#define __STD_TYPES_H__

/**********************************************************************************************************************
 * INCLUDES
 *********************************************************************************************************************/
#include "Compiler.h"
#include "Platform_Types.h"

/**********************************************************************************************************************
 *  GLOBAL CONSTANT MACROS
 *********************************************************************************************************************/


/**********************************************************************************************************************
 *  GLOBAL FUNCTION MACROS
 *********************************************************************************************************************/


/**********************************************************************************************************************
 *  GLOBAL DATA TYPES AND STRUCTURES
 *********************************************************************************************************************/
typedef uint8 Std_ReturnType;
#ifndef STATUSTYPEDEFINED
#define STATUSTYPEDEFINED
#define E_OK        (uint8)0x00
#define E_NOT_OK    (uint8)0x01
typedef uint8 StatusType;  /* OSEK Compliance */
#endif

#define STD_HIGH (uint8)0x01   /* Physical State 3.3V or 5.0V */
#define STD_LOW  (uint8)0x00   /* Physical State 0v */

#define STD_ACTIVE  (uint8)0x01  /* Logical State Active */
#define STD_IDLE    (uint8)0x00  /* Logical State Idle */

#define STD_ON     (uint8)0x01
#define STD_OFF    (uint8)0x00

#define TRUE       1
#define FALSE      0

typedef struct {
    uint32 id;
} Std_VersionInfoType;

/**********************************************************************************************************************
 *  GLOBAL DATA PROTOTYPES
 *********************************************************************************************************************/

 
/**********************************************************************************************************************
 *  GLOBAL FUNCTION PROTOTYPES
 *********************************************************************************************************************/

 
#endif  /* __STD_TYPES_H__ */

/**********************************************************************************************************************
 *  END OF FILE: Std_Types.h
 *********************************************************************************************************************/
